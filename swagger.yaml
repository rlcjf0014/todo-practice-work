openapi: 3.0.0
info:
    description: 'A Sample application using Typescipt-rest library'
    license:
        name: MIT
    title: 'Typescript-rest Todo Application'
    version: 0.0.1
paths:
    /user:
        post:
            summary: User Login
            operationId: UserLogin
            responses:
                '200':
                    description: Success message for user login
                    content:
                        application/json:
                            schema:
                                type: object
                                properties: 
                                    accessToken:
                                        type: string
                            example: 
                                accessToken: 
                                    e71sdf....
            description: "This endpoint allows the user to login."
            tags:
                - User
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/Models/login'
                            example: 
                                email: test@gmail.com
                                password: testing

                required: true
    '/user/{userid}':
        delete:
            summary: User Logout
            security: 
                - bearerAuth: []
            operationId: UserLogout
            responses:
                '200':
                    description: Success message of user logout
                    content:
                        text/html:
                            schema:
                                type: string
                            example:
                                Refresh token is already deleted
                '401':
                    $ref: '#/components/responses/UnauthorizedError'
            description: "This endpoint allows the user to logout."
            tags:
                - User
            parameters:
                -
                    description: "User Id"
                    in: path
                    name: userid
                    required: true
                    schema:
                        type: number
                        format: double
        get:
            summary: Renew Access Token
            operationId: UserRenewToken
            responses:
                '200':
                    description: New Access Token
                    content:
                        text/html:
                            schema:
                                type: object
                                properties: 
                                    accessToken:
                                        type: string
                            example: 
                                accessToken: 
                                    e71sdf....
            description: "This endpoint allows the user to renew access token."
            tags:
                - User
            parameters:
                -
                    description: "User Id"
                    in: path
                    name: userid
                    required: true
                    schema:
                        type: number
                        format: double
    /new:
        post:
            summary: User Sign Up
            operationId: NewSignup
            responses:
                '200':
                    description: Success message for user sign up.
                    content:
                        text/html:
                            schema:
                                type: string
                            example:
                                Sign up is successful
            description: "This endpoint allows the user to sign up."
            tags:
                - User
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/Models/signup'
                required: true
    /todo:
        post:
            summary: Add a Todo
            security: 
                - bearerAuth: []
            operationId: TodoAddTodo
            responses:
                '200':
                    description: A todo that is created
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/Models/TodoModel'
                            example:
                                id:
                                    1
                                content:
                                    Take out trash
                                date:
                                    "2020-04-01"
                                complete:
                                    "Y"
                                userId:
                                    1
                                creationDate:
                                    "Created Date..."
                                updatedOn:
                                    "Updated Date..."
                '401':
                    $ref: '#/components/responses/UnauthorizedError'
            description: "This endpoint allows the user to add a todo."
            tags:
                - Todo
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/Models/addtodo'
                required: true
        put:
            summary: Update Complete Status of a Todo
            security: 
                - bearerAuth: []
            operationId: TodoUpdateTodo
            responses:
                '200':
                    description: A todo that is created
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/Models/TodoModel'
                            example:
                                id:
                                    1
                                content:
                                    Take out trash
                                date:
                                    "2020-04-01"
                                complete:
                                    "C"
                                userId:
                                    1
                                creationDate:
                                    "Created Date..."
                                updatedOn:
                                    "Updated Date..."
                '401':
                    $ref: '#/components/responses/UnauthorizedError'
            description: "This endpoint allows the user to update the complete status of a todo."
            tags:
                - Todo
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/Models/updatetodo'
                required: true
    '/todo/{date}':
        get:
            summary: Get a list of todos by Date
            security: 
                - bearerAuth: []
            operationId: TodoGetTodo
            responses:
                '200':
                    description: List of Todos of a date
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/Models/TodoModel'
                            example:
                                [todo#1, todo#2...]
                '401':
                    $ref: '#/components/responses/UnauthorizedError'
            description: "This endpoint allows the user to get a list of todos by date."
            tags:
                - Todo
            parameters:
                -
                    description: "Date"
                    in: path
                    name: date
                    required: true
                    schema:
                        type: string
    '/todo/{todoid}':
        delete:
            summary: Delete a todo
            security: 
                - bearerAuth: []
            operationId: TodoDeleteTodo
            responses:
                '200':
                    description: Success message of deleting todo
                    content:
                        text/html:
                            schema:
                                type: string
                            example:
                                Successfully deleted todo
                '401':
                    $ref: '#/components/responses/UnauthorizedError'
            description: "This endpoint allows the user to delete a todo."
            tags:
                - Todo
            parameters:
                -
                    description: "Todo Id"
                    in: path
                    name: todoid
                    required: true
                    schema:
                        type: number
                        format: double
components:
    securitySchemes:
        bearerAuth:
            type: http
            scheme: bearer
            bearerFormat: JWT
            name: authentication
            description: 'Enter your access token received after login.'
    responses:
        UnauthorizedError:
            description: Access Token is invalid or missing
    Models:
        login:
            description: ""
            properties:
                email:
                    type: string
                    description: ""
                password:
                    type: string
                    description: ""
            type: object
            required:
                - email
                - password
        signup:
            description: ""
            properties:
                email:
                    type: string
                    description: ""
                nickname:
                    type: string
                    description: ""
                password:
                    type: string
                    description: ""
            type: object
            required:
                - email
                - nickname
                - password
        addtodo:
            description: ""
            properties:
                content:
                    type: string
                    description: ""
                date:
                    type: string
                    description: ""
                complete:
                    type: string
                    description: ""
            type: object
            required:
                - content
                - date
                - complete
        updatetodo:
            description: ""
            properties:
                id:
                    type: number
                    format: double
                    description: ""
                complete:
                    enum:
                        - C
                        - Y
                    type: string
                    description: ""
            type: object
            required:
                - id
                - complete
        TodoModel:
            description: ""
            properties:
                id:
                    type: number
                    format: double
                    description: ""
                content:
                    type: string
                    description: ""
                date:
                    type: string
                    description: ""
                complete:
                    type: string
                    description: ""
                userId:
                    type: number
                    format: double
                    description: ""
                creationDate:
                    type: string
                    format: date-time
                    description: ""
                updatedOn:
                    type: string
                    format: date-time
                    description: ""
            type: object
            required:
                - id
                - content
                - date
                - complete
                - userId
                - creationDate
                - updatedOn
